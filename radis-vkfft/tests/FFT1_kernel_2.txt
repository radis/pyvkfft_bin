// kernel type: 20000
#version 450

layout (local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
layout(std430, binding = 0) buffer DataIn{
	vec2 inputs[150529];
};

layout(std430, binding = 1) buffer DataOut{
	vec2 outputs[150529];
};

void main() {
vec2 temp_0;
temp_0.x = 0.0f;
temp_0.y = 0.0f;
vec2 temp_1;
temp_1.x = 0.0f;
temp_1.y = 0.0f;
vec2 temp_2;
temp_2.x = 0.0f;
temp_2.y = 0.0f;
vec2 temp_3;
temp_3.x = 0.0f;
temp_3.y = 0.0f;
vec2 w;
w.x = 0.0f;
w.y = 0.0f;
uint tempInt;
tempInt = 0;
uint tempInt2;
tempInt2 = 0;
uint shiftX;
shiftX = 0;
uint shiftY;
shiftY = 0;
uint shiftZ;
shiftZ = 0;
uint inoutID;
inoutID = 0;
uint inoutID_x;
inoutID_x = 0;
uint inoutID_y;
inoutID_y = 0;
float angle;
angle = 0.0f;
shiftX = gl_GlobalInvocationID.x;
inoutID_x = shiftX % 75264;
tempInt = shiftX / 75264;
tempInt = gl_GlobalInvocationID.z / 1;
tempInt = tempInt * 150529;
shiftZ = shiftZ + tempInt;
shiftZ = shiftZ + 0;
if (shiftX < 75264) {
inoutID = inoutID_x + shiftZ;
temp_0 = inputs[inoutID];
if (inoutID_x == 0) {
tempInt = 150528 + shiftZ;
tempInt2 = 75264 + shiftZ;
w = inputs[tempInt2];
}else{
tempInt = 150528 - inoutID_x;
tempInt = tempInt + shiftZ;
}
temp_1 = inputs[tempInt];
if (inoutID_x == 0) {
temp_2.x = temp_0.y;
temp_3.x = -temp_0.y;
temp_2.x = temp_2.x + temp_0.x;
temp_3.x = temp_3.x + temp_0.x;
w.y = -w.y;
outputs[inoutID] = temp_2;
outputs[tempInt] = temp_3;
outputs[tempInt2] = w;
}else{
temp_2.x = temp_0.x + temp_1.x;
temp_2.y = temp_0.y + temp_1.y;
temp_3.x = temp_0.x - temp_1.x;
temp_3.y = temp_0.y - temp_1.y;
temp_2.x = temp_2.x * 5.00000000000000000e-01f;
temp_2.y = temp_2.y * 5.00000000000000000e-01f;
temp_3.x = temp_3.x * 5.00000000000000000e-01f;
temp_3.y = temp_3.y * 5.00000000000000000e-01f;
angle = inoutID_x * 2.08704869100087232e-05f;
w.x = cos(angle);
w.y = sin(angle);
w.y = -w.y;
temp_0.x = temp_3.x;
temp_0.y = temp_2.y;
temp_1.x = temp_0.y * w.y;
temp_1.x = -temp_1.x;
temp_1.x = fma(temp_0.x, w.x, temp_1.x);
temp_1.y = temp_0.y * w.x;
temp_1.y = fma(temp_0.x, w.y, temp_1.y);
temp_0.x = temp_1.y;
temp_0.y = -temp_1.x;
temp_1.x = temp_2.x - temp_0.x;
temp_1.y = temp_0.y - temp_3.y;
temp_0.x = temp_2.x + temp_0.x;
temp_0.y = temp_0.y + temp_3.y;
outputs[inoutID] = temp_0;
outputs[tempInt] = temp_1;
}
}
}
