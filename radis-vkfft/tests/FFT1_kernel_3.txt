// kernel type: 101000
#version 450

layout (local_size_x = 512, local_size_y = 1, local_size_z = 1) in;
layout(std430, binding = 0) buffer DataIn{
	vec2 inputs[1204225];
};

layout(std430, binding = 1) buffer DataOut{
	vec2 outputs[1204225];
};

shared vec2 sdata[4096];

void main() {
vec2 temp_0;
temp_0.x = 0.0f;
temp_0.y = 0.0f;
vec2 temp_1;
temp_1.x = 0.0f;
temp_1.y = 0.0f;
vec2 temp_2;
temp_2.x = 0.0f;
temp_2.y = 0.0f;
vec2 temp_3;
temp_3.x = 0.0f;
temp_3.y = 0.0f;
vec2 temp_4;
temp_4.x = 0.0f;
temp_4.y = 0.0f;
vec2 temp_5;
temp_5.x = 0.0f;
temp_5.y = 0.0f;
vec2 temp_6;
temp_6.x = 0.0f;
temp_6.y = 0.0f;
vec2 temp_7;
temp_7.x = 0.0f;
temp_7.y = 0.0f;
vec2 w;
w.x = 0.0f;
w.y = 0.0f;
vec2 loc_0;
loc_0.x = 0.0f;
loc_0.y = 0.0f;
uint tempInt;
tempInt = 0;
uint tempInt2;
tempInt2 = 0;
uint shiftX;
shiftX = 0;
uint shiftY;
shiftY = 0;
uint shiftZ;
shiftZ = 0;
vec2 iw;
iw.x = 0.0f;
iw.y = 0.0f;
uint stageInvocationID;
stageInvocationID = 0;
uint blockInvocationID;
blockInvocationID = 0;
uint sdataID;
sdataID = 0;
uint combinedID;
combinedID = 0;
uint inoutID;
inoutID = 0;
uint inoutID_x;
inoutID_x = 0;
uint inoutID_y;
inoutID_y = 0;
uint disableThreads;
disableThreads = 1;
float angle;
angle = 0.0f;
shiftX = gl_GlobalInvocationID.x;
shiftZ = 0;
shiftZ = shiftZ + 0;
inoutID_x = shiftX % 150529;
tempInt2 = shiftX / 150529;
tempInt2 = tempInt2 % 1;
tempInt = shiftX / 150529;
tempInt = tempInt * 8;
tempInt2 = tempInt2 + tempInt;
if (tempInt2 < 8) {
inoutID_y = gl_LocalInvocationID.y * 1;
inoutID_y = inoutID_y + tempInt2;
inoutID = inoutID_x;
tempInt = inoutID_y * 150529;
inoutID = inoutID + tempInt;
inoutID = inoutID + shiftZ;
temp_0 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_1 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_2 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_3 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_4 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_5 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_6 = inputs[inoutID];
inoutID = inoutID + 150529;
temp_7 = inputs[inoutID];
}
stageInvocationID = gl_LocalInvocationID.y + 0;
stageInvocationID = stageInvocationID % 1;
angle = stageInvocationID * -3.14159265358979312e+00f;
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_0.x = temp_4.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_4.x, w.x, loc_0.x);
loc_0.y = temp_4.y * w.x;
loc_0.y = fma(temp_4.x, w.y, loc_0.y);
temp_4.x = temp_0.x - loc_0.x;
temp_4.y = temp_0.y - loc_0.y;
temp_0.x = temp_0.x + loc_0.x;
temp_0.y = temp_0.y + loc_0.y;
loc_0.x = temp_5.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_5.x, w.x, loc_0.x);
loc_0.y = temp_5.y * w.x;
loc_0.y = fma(temp_5.x, w.y, loc_0.y);
temp_5.x = temp_1.x - loc_0.x;
temp_5.y = temp_1.y - loc_0.y;
temp_1.x = temp_1.x + loc_0.x;
temp_1.y = temp_1.y + loc_0.y;
loc_0.x = temp_6.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_6.x, w.x, loc_0.x);
loc_0.y = temp_6.y * w.x;
loc_0.y = fma(temp_6.x, w.y, loc_0.y);
temp_6.x = temp_2.x - loc_0.x;
temp_6.y = temp_2.y - loc_0.y;
temp_2.x = temp_2.x + loc_0.x;
temp_2.y = temp_2.y + loc_0.y;
loc_0.x = temp_7.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_7.x, w.x, loc_0.x);
loc_0.y = temp_7.y * w.x;
loc_0.y = fma(temp_7.x, w.y, loc_0.y);
temp_7.x = temp_3.x - loc_0.x;
temp_7.y = temp_3.y - loc_0.y;
temp_3.x = temp_3.x + loc_0.x;
temp_3.y = temp_3.y + loc_0.y;
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_0.x = temp_2.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_2.x, w.x, loc_0.x);
loc_0.y = temp_2.y * w.x;
loc_0.y = fma(temp_2.x, w.y, loc_0.y);
temp_2.x = temp_0.x - loc_0.x;
temp_2.y = temp_0.y - loc_0.y;
temp_0.x = temp_0.x + loc_0.x;
temp_0.y = temp_0.y + loc_0.y;
loc_0.x = temp_3.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_3.x, w.x, loc_0.x);
loc_0.y = temp_3.y * w.x;
loc_0.y = fma(temp_3.x, w.y, loc_0.y);
temp_3.x = temp_1.x - loc_0.x;
temp_3.y = temp_1.y - loc_0.y;
temp_1.x = temp_1.x + loc_0.x;
temp_1.y = temp_1.y + loc_0.y;
iw.x = w.y;
iw.y = -w.x;
loc_0.x = temp_6.y * iw.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_6.x, iw.x, loc_0.x);
loc_0.y = temp_6.y * iw.x;
loc_0.y = fma(temp_6.x, iw.y, loc_0.y);
temp_6.x = temp_4.x - loc_0.x;
temp_6.y = temp_4.y - loc_0.y;
temp_4.x = temp_4.x + loc_0.x;
temp_4.y = temp_4.y + loc_0.y;
loc_0.x = temp_7.y * iw.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_7.x, iw.x, loc_0.x);
loc_0.y = temp_7.y * iw.x;
loc_0.y = fma(temp_7.x, iw.y, loc_0.y);
temp_7.x = temp_5.x - loc_0.x;
temp_7.y = temp_5.y - loc_0.y;
temp_5.x = temp_5.x + loc_0.x;
temp_5.y = temp_5.y + loc_0.y;
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_0.x = temp_1.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_1.x, w.x, loc_0.x);
loc_0.y = temp_1.y * w.x;
loc_0.y = fma(temp_1.x, w.y, loc_0.y);
temp_1.x = temp_0.x - loc_0.x;
temp_1.y = temp_0.y - loc_0.y;
temp_0.x = temp_0.x + loc_0.x;
temp_0.y = temp_0.y + loc_0.y;
iw.x = w.y;
iw.y = -w.x;
loc_0.x = temp_3.y * iw.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_3.x, iw.x, loc_0.x);
loc_0.y = temp_3.y * iw.x;
loc_0.y = fma(temp_3.x, iw.y, loc_0.y);
temp_3.x = temp_2.x - loc_0.x;
temp_3.y = temp_2.y - loc_0.y;
temp_2.x = temp_2.x + loc_0.x;
temp_2.y = temp_2.y + loc_0.y;
iw.x = w.y * -7.07106781186547573e-01f;
iw.x = -iw.x;
iw.x = fma(w.x, 7.07106781186547573e-01f, iw.x);
iw.y = w.y * 7.07106781186547573e-01f;
iw.y = fma(w.x, -7.07106781186547573e-01f, iw.y);
loc_0.x = temp_5.y * iw.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_5.x, iw.x, loc_0.x);
loc_0.y = temp_5.y * iw.x;
loc_0.y = fma(temp_5.x, iw.y, loc_0.y);
temp_5.x = temp_4.x - loc_0.x;
temp_5.y = temp_4.y - loc_0.y;
temp_4.x = temp_4.x + loc_0.x;
temp_4.y = temp_4.y + loc_0.y;
w.x = iw.y;
w.y = -iw.x;
loc_0.x = temp_7.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_7.x, w.x, loc_0.x);
loc_0.y = temp_7.y * w.x;
loc_0.y = fma(temp_7.x, w.y, loc_0.y);
temp_7.x = temp_6.x - loc_0.x;
temp_7.y = temp_6.y - loc_0.y;
temp_6.x = temp_6.x + loc_0.x;
temp_6.y = temp_6.y + loc_0.y;
if (tempInt2 < 8) {
inoutID_y = gl_LocalInvocationID.y * 1;
inoutID_y = inoutID_y + tempInt2;
inoutID = inoutID_x;
tempInt = inoutID_y * 150529;
inoutID = inoutID + tempInt;
inoutID = inoutID + shiftZ;
outputs[inoutID] = temp_0;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_4;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_2;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_6;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_1;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_5;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_3;
inoutID = inoutID + 150529;
outputs[inoutID] = temp_7;
}
}
