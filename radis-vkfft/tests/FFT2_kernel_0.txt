// kernel type: 100010
#version 450

layout (local_size_x = 9, local_size_y = 32, local_size_z = 1) in;
layout(push_constant) uniform PushConsts
{
	uint inputOffset;
	uint outputOffset;
	uint currentBatch;
} consts;

layout(std430, binding = 0) buffer DataIn{
	vec2 inputs[];
};

layout(std430, binding = 1) buffer DataOut{
	vec2 outputs[];
};

shared vec2 sdata[2048];// sharedStride - fft size,  gl_WorkGroupSize.y - grouped consecutive ffts

void main() {
if (gl_WorkGroupID.y > consts.currentBatch) return;
vec2 temp_0;
temp_0.x = 0.0f;
temp_0.y = 0.0f;
vec2 temp_1;
temp_1.x = 0.0f;
temp_1.y = 0.0f;
vec2 temp_2;
temp_2.x = 0.0f;
temp_2.y = 0.0f;
vec2 temp_3;
temp_3.x = 0.0f;
temp_3.y = 0.0f;
vec2 temp_4;
temp_4.x = 0.0f;
temp_4.y = 0.0f;
vec2 temp_5;
temp_5.x = 0.0f;
temp_5.y = 0.0f;
vec2 temp_6;
temp_6.x = 0.0f;
temp_6.y = 0.0f;
vec2 temp_7;
temp_7.x = 0.0f;
temp_7.y = 0.0f;
vec2 temp_8;
temp_8.x = 0.0f;
temp_8.y = 0.0f;
vec2 w;
w.x = 0.0f;
w.y = 0.0f;
vec2 loc_0;
loc_0.x = 0.0f;
loc_0.y = 0.0f;
vec2 loc_1;
loc_1.x = 0.0f;
loc_1.y = 0.0f;
vec2 loc_2;
loc_2.x = 0.0f;
loc_2.y = 0.0f;
vec2 loc_3;
loc_3.x = 0.0f;
loc_3.y = 0.0f;
vec2 loc_4;
loc_4.x = 0.0f;
loc_4.y = 0.0f;
vec2 loc_5;
loc_5.x = 0.0f;
loc_5.y = 0.0f;
vec2 loc_6;
loc_6.x = 0.0f;
loc_6.y = 0.0f;
uint tempInt;
tempInt = 0;
uint tempInt2;
tempInt2 = 0;
uint shiftX;
shiftX = 0;
uint shiftY;
shiftY = 0;
uint shiftZ;
shiftZ = 0;
uint stageInvocationID;
stageInvocationID = 0;
uint blockInvocationID;
blockInvocationID = 0;
uint sdataID;
sdataID = 0;
uint combinedID;
combinedID = 0;
uint inoutID;
inoutID = 0;
uint inoutID_x;
inoutID_x = 0;
uint inoutID_y;
inoutID_y = 0;
uint disableThreads;
disableThreads = 1;
float angle;
angle = 0.0f;
shiftX = gl_WorkGroupID.x;
shiftZ = 0;
shiftZ = shiftZ + consts.inputOffset;
tempInt = shiftX % 63;
tempInt2 = tempInt * 63;
tempInt = shiftX / 63;
tempInt = tempInt * 127008;
tempInt2 = tempInt2 + tempInt;
tempInt = gl_WorkGroupID.x / 63;
if (tempInt == 1) {
blockInvocationID = 1953;
}else{
blockInvocationID = 2016;
}
tempInt = gl_LocalInvocationID.y * 3969;
tempInt = tempInt + tempInt2;
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 0;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 288;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 576;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 864;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 1152;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 1440;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 1728;
inoutID_x = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 3969;
inoutID_x = inoutID_x + tempInt;
inoutID_x = inoutID_x + tempInt2;
if (combinedID < blockInvocationID) {
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 63;
tempInt = combinedID / 63;
tempInt = tempInt * 64;
sdataID = sdataID + tempInt;
sdata[sdataID] = inputs[inoutID];
}
barrier();

stageInvocationID = gl_LocalInvocationID.x + 0;
stageInvocationID = stageInvocationID % 1;
angle = stageInvocationID * 3.14159265358979312e+00f;
sdataID = gl_LocalInvocationID.x + 0;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_0 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 9;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_1 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 18;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_2 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 27;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_3 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 36;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_4 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 45;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_5 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 54;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_6 = sdata[sdataID];
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_6.x = temp_6.y * w.y;
loc_6.x = -loc_6.x;
loc_6.x = fma(temp_6.x, w.x, loc_6.x);
loc_6.y = temp_6.y * w.x;
loc_6.y = fma(temp_6.x, w.y, loc_6.y);
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_5.x = temp_5.y * w.y;
loc_5.x = -loc_5.x;
loc_5.x = fma(temp_5.x, w.x, loc_5.x);
loc_5.y = temp_5.y * w.x;
loc_5.y = fma(temp_5.x, w.y, loc_5.y);
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_4.x = temp_4.y * w.y;
loc_4.x = -loc_4.x;
loc_4.x = fma(temp_4.x, w.x, loc_4.x);
loc_4.y = temp_4.y * w.x;
loc_4.y = fma(temp_4.x, w.y, loc_4.y);
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_3.x = temp_3.y * w.y;
loc_3.x = -loc_3.x;
loc_3.x = fma(temp_3.x, w.x, loc_3.x);
loc_3.y = temp_3.y * w.x;
loc_3.y = fma(temp_3.x, w.y, loc_3.y);
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_2.x = temp_2.y * w.y;
loc_2.x = -loc_2.x;
loc_2.x = fma(temp_2.x, w.x, loc_2.x);
loc_2.y = temp_2.y * w.x;
loc_2.y = fma(temp_2.x, w.y, loc_2.y);
w.x = 1.00000000000000000e+00f;
w.y = 0.00000000000000000e+00f;
loc_1.x = temp_1.y * w.y;
loc_1.x = -loc_1.x;
loc_1.x = fma(temp_1.x, w.x, loc_1.x);
loc_1.y = temp_1.y * w.x;
loc_1.y = fma(temp_1.x, w.y, loc_1.y);
loc_0 = temp_0;
temp_4.x = loc_1.x - loc_6.x;
temp_1.x = loc_1.x + loc_6.x;
temp_4.y = loc_1.y + loc_6.y;
temp_1.y = loc_1.y - loc_6.y;
temp_5.x = loc_3.x - loc_4.x;
temp_2.x = loc_3.x + loc_4.x;
temp_5.y = loc_3.y + loc_4.y;
temp_2.y = loc_3.y - loc_4.y;
temp_6.x = loc_2.x - loc_5.x;
temp_3.x = loc_2.x + loc_5.x;
temp_6.y = loc_2.y + loc_5.y;
temp_3.y = loc_2.y - loc_5.y;
temp_0.x = temp_0.x + temp_1.x;
temp_0.y = temp_0.y + temp_4.y;
temp_0.x = temp_0.x + temp_2.x;
temp_0.y = temp_0.y + temp_5.y;
temp_0.x = temp_0.x + temp_3.x;
temp_0.y = temp_0.y + temp_6.y;
loc_1 = loc_0;
loc_3 = loc_0;
loc_2 = loc_0;
loc_6.x = 0.0f;
loc_6.y = 0.0f;
loc_4.x = 0.0f;
loc_4.y = 0.0f;
loc_5.x = 0.0f;
loc_5.y = 0.0f;
loc_1.x = fma(temp_1.x, 6.23489801858733483e-01f, loc_1.x);
loc_1.y = fma(temp_4.y, 6.23489801858733483e-01f, loc_1.y);
loc_6.x = fma(temp_1.y, 7.81831482468029804e-01f, loc_6.x);
loc_6.y = fma(temp_4.x, 7.81831482468029804e-01f, loc_6.y);
loc_3.x = fma(temp_1.x, -2.22520933956314393e-01f, loc_3.x);
loc_3.y = fma(temp_4.y, -2.22520933956314393e-01f, loc_3.y);
loc_4.x = fma(temp_1.y, -9.74927912181823619e-01f, loc_4.x);
loc_4.y = fma(temp_4.x, -9.74927912181823619e-01f, loc_4.y);
loc_2.x = fma(temp_1.x, -9.00968867902419146e-01f, loc_2.x);
loc_2.y = fma(temp_4.y, -9.00968867902419146e-01f, loc_2.y);
loc_5.x = fma(temp_1.y, -4.33883739117558120e-01f, loc_5.x);
loc_5.y = fma(temp_4.x, -4.33883739117558120e-01f, loc_5.y);
loc_1.x = fma(temp_2.x, -9.00968867902419146e-01f, loc_1.x);
loc_1.y = fma(temp_5.y, -9.00968867902419146e-01f, loc_1.y);
loc_6.x = fma(temp_2.y, 4.33883739117558120e-01f, loc_6.x);
loc_6.y = fma(temp_5.x, 4.33883739117558120e-01f, loc_6.y);
loc_3.x = fma(temp_2.x, 6.23489801858733483e-01f, loc_3.x);
loc_3.y = fma(temp_5.y, 6.23489801858733483e-01f, loc_3.y);
loc_4.x = fma(temp_2.y, 7.81831482468029804e-01f, loc_4.x);
loc_4.y = fma(temp_5.x, 7.81831482468029804e-01f, loc_4.y);
loc_2.x = fma(temp_2.x, -2.22520933956314393e-01f, loc_2.x);
loc_2.y = fma(temp_5.y, -2.22520933956314393e-01f, loc_2.y);
loc_5.x = fma(temp_2.y, -9.74927912181823619e-01f, loc_5.x);
loc_5.y = fma(temp_5.x, -9.74927912181823619e-01f, loc_5.y);
loc_1.x = fma(temp_3.x, -2.22520933956314393e-01f, loc_1.x);
loc_1.y = fma(temp_6.y, -2.22520933956314393e-01f, loc_1.y);
loc_6.x = fma(temp_3.y, 9.74927912181823619e-01f, loc_6.x);
loc_6.y = fma(temp_6.x, 9.74927912181823619e-01f, loc_6.y);
loc_3.x = fma(temp_3.x, -9.00968867902419146e-01f, loc_3.x);
loc_3.y = fma(temp_6.y, -9.00968867902419146e-01f, loc_3.y);
loc_4.x = fma(temp_3.y, 4.33883739117558120e-01f, loc_4.x);
loc_4.y = fma(temp_6.x, 4.33883739117558120e-01f, loc_4.y);
loc_2.x = fma(temp_3.x, 6.23489801858733483e-01f, loc_2.x);
loc_2.y = fma(temp_6.y, 6.23489801858733483e-01f, loc_2.y);
loc_5.x = fma(temp_3.y, 7.81831482468029804e-01f, loc_5.x);
loc_5.y = fma(temp_6.x, 7.81831482468029804e-01f, loc_5.y);
temp_1.x = loc_1.x - loc_6.x;
temp_1.y = loc_1.y + loc_6.y;
temp_2.x = loc_3.x - loc_4.x;
temp_2.y = loc_3.y + loc_4.y;
temp_3.x = loc_2.x - loc_5.x;
temp_3.y = loc_2.y + loc_5.y;
temp_4.x = loc_1.x + loc_6.x;
temp_4.y = loc_1.y - loc_6.y;
temp_5.x = loc_3.x + loc_4.x;
temp_5.y = loc_3.y - loc_4.y;
temp_6.x = loc_2.x + loc_5.x;
temp_6.y = loc_2.y - loc_5.y;
barrier();

stageInvocationID = gl_LocalInvocationID.x + 0;
blockInvocationID = stageInvocationID;
stageInvocationID = stageInvocationID % 1;
blockInvocationID = blockInvocationID - stageInvocationID;
inoutID = blockInvocationID * 7;
inoutID = inoutID + stageInvocationID;
sdataID = inoutID + 0;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_0.x = temp_0.x * 1.99962407067471315e-06f;
temp_0.y = temp_0.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_0;
sdataID = inoutID + 1;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_1.x = temp_1.x * 1.99962407067471315e-06f;
temp_1.y = temp_1.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_1;
sdataID = inoutID + 2;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_5.x = temp_5.x * 1.99962407067471315e-06f;
temp_5.y = temp_5.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_5;
sdataID = inoutID + 3;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_6.x = temp_6.x * 1.99962407067471315e-06f;
temp_6.y = temp_6.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_6;
sdataID = inoutID + 4;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_3.x = temp_3.x * 1.99962407067471315e-06f;
temp_3.y = temp_3.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_3;
sdataID = inoutID + 5;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_2.x = temp_2.x * 1.99962407067471315e-06f;
temp_2.y = temp_2.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_2;
sdataID = inoutID + 6;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
temp_4.x = temp_4.x * 1.99962407067471315e-06f;
temp_4.y = temp_4.y * 1.99962407067471315e-06f;
sdata[sdataID] = temp_4;
barrier();

if (gl_LocalInvocationID.x < 7) {
stageInvocationID = gl_LocalInvocationID.x + 0;
stageInvocationID = stageInvocationID % 7;
angle = stageInvocationID * 4.48798950512827588e-01f;
sdataID = gl_LocalInvocationID.x + 0;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_0 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 7;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_1 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 14;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_5 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 21;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_6 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 28;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_3 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 35;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_2 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 42;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_4 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 49;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_7 = sdata[sdataID];
sdataID = gl_LocalInvocationID.x + 56;
tempInt = 64 * gl_LocalInvocationID.y;
sdataID = sdataID + tempInt;
temp_8 = sdata[sdataID];
loc_0.x = angle * 1.77777777777777768e+00f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_8.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_8.x, w.x, loc_0.x);
loc_0.y = temp_8.y * w.x;
temp_8.y = fma(temp_8.x, w.y, loc_0.y);
temp_8.x = loc_0.x;
loc_0.x = angle * 1.55555555555555558e+00f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_7.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_7.x, w.x, loc_0.x);
loc_0.y = temp_7.y * w.x;
temp_7.y = fma(temp_7.x, w.y, loc_0.y);
temp_7.x = loc_0.x;
loc_0.x = angle * 1.33333333333333326e+00f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_4.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_4.x, w.x, loc_0.x);
loc_0.y = temp_4.y * w.x;
temp_4.y = fma(temp_4.x, w.y, loc_0.y);
temp_4.x = loc_0.x;
loc_0.x = angle * 1.11111111111111116e+00f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_2.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_2.x, w.x, loc_0.x);
loc_0.y = temp_2.y * w.x;
temp_2.y = fma(temp_2.x, w.y, loc_0.y);
temp_2.x = loc_0.x;
loc_0.x = angle * 8.88888888888888840e-01f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_3.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_3.x, w.x, loc_0.x);
loc_0.y = temp_3.y * w.x;
temp_3.y = fma(temp_3.x, w.y, loc_0.y);
temp_3.x = loc_0.x;
loc_0.x = angle * 6.66666666666666630e-01f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_6.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_6.x, w.x, loc_0.x);
loc_0.y = temp_6.y * w.x;
temp_6.y = fma(temp_6.x, w.y, loc_0.y);
temp_6.x = loc_0.x;
loc_0.x = angle * 4.44444444444444420e-01f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_5.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_5.x, w.x, loc_0.x);
loc_0.y = temp_5.y * w.x;
temp_5.y = fma(temp_5.x, w.y, loc_0.y);
temp_5.x = loc_0.x;
loc_0.x = angle * 2.22222222222222210e-01f;
w.x = cos(loc_0.x);
w.y = sin(loc_0.x);
loc_0.x = temp_1.y * w.y;
loc_0.x = -loc_0.x;
loc_0.x = fma(temp_1.x, w.x, loc_0.x);
loc_0.y = temp_1.y * w.x;
temp_1.y = fma(temp_1.x, w.y, loc_0.y);
temp_1.x = loc_0.x;
loc_0 = temp_0;
loc_1 = temp_6;
loc_3 = temp_4;
temp_6.x = loc_1.x + loc_3.x;
temp_6.y = loc_1.y + loc_3.y;
temp_4.x = loc_1.x - loc_3.x;
temp_4.y = loc_1.y - loc_3.y;
loc_0.x = temp_0.x + temp_6.x;
loc_0.y = temp_0.y + temp_6.y;
loc_1.x = fma(temp_6.x, -5.00000000000000000e-01f, temp_0.x);
loc_1.y = fma(temp_6.y, -5.00000000000000000e-01f, temp_0.y);
loc_3.x = temp_4.x * -8.66025403784438597e-01f;
loc_3.y = temp_4.y * -8.66025403784438597e-01f;
temp_0 = loc_0;
loc_0.x = loc_3.y;
loc_0.y = -loc_3.x;
temp_6.x = loc_1.x + loc_0.x;
temp_6.y = loc_1.y + loc_0.y;
loc_0.x = -loc_3.y;
loc_0.y = loc_3.x;
temp_4.x = loc_1.x + loc_0.x;
temp_4.y = loc_1.y + loc_0.y;
loc_0 = temp_1;
loc_1 = temp_3;
loc_3 = temp_7;
temp_3.x = loc_1.x + loc_3.x;
temp_3.y = loc_1.y + loc_3.y;
temp_7.x = loc_1.x - loc_3.x;
temp_7.y = loc_1.y - loc_3.y;
loc_0.x = temp_1.x + temp_3.x;
loc_0.y = temp_1.y + temp_3.y;
loc_1.x = fma(temp_3.x, -5.00000000000000000e-01f, temp_1.x);
loc_1.y = fma(temp_3.y, -5.00000000000000000e-01f, temp_1.y);
loc_3.x = temp_7.x * -8.66025403784438597e-01f;
loc_3.y = temp_7.y * -8.66025403784438597e-01f;
temp_1 = loc_0;
loc_0.x = loc_3.y;
loc_0.y = -loc_3.x;
temp_3.x = loc_1.x + loc_0.x;
temp_3.y = loc_1.y + loc_0.y;
loc_0.x = -loc_3.y;
loc_0.y = loc_3.x;
temp_7.x = loc_1.x + loc_0.x;
temp_7.y = loc_1.y + loc_0.y;
loc_0 = temp_5;
loc_1 = temp_2;
loc_3 = temp_8;
temp_2.x = loc_1.x + loc_3.x;
temp_2.y = loc_1.y + loc_3.y;
temp_8.x = loc_1.x - loc_3.x;
temp_8.y = loc_1.y - loc_3.y;
loc_0.x = temp_5.x + temp_2.x;
loc_0.y = temp_5.y + temp_2.y;
loc_1.x = fma(temp_2.x, -5.00000000000000000e-01f, temp_5.x);
loc_1.y = fma(temp_2.y, -5.00000000000000000e-01f, temp_5.y);
loc_3.x = temp_8.x * -8.66025403784438597e-01f;
loc_3.y = temp_8.y * -8.66025403784438597e-01f;
temp_5 = loc_0;
loc_0.x = loc_3.y;
loc_0.y = -loc_3.x;
temp_2.x = loc_1.x + loc_0.x;
temp_2.y = loc_1.y + loc_0.y;
loc_0.x = -loc_3.y;
loc_0.y = loc_3.x;
temp_8.x = loc_1.x + loc_0.x;
temp_8.y = loc_1.y + loc_0.y;
loc_1 = temp_1;
loc_3 = temp_5;
temp_1.x = loc_1.x + loc_3.x;
temp_1.y = loc_1.y + loc_3.y;
temp_5.x = loc_1.x - loc_3.x;
temp_5.y = loc_1.y - loc_3.y;
loc_0.x = temp_0.x + temp_1.x;
loc_0.y = temp_0.y + temp_1.y;
loc_1.x = fma(temp_1.x, -5.00000000000000000e-01f, temp_0.x);
loc_1.y = fma(temp_1.y, -5.00000000000000000e-01f, temp_0.y);
loc_3.x = temp_5.x * -8.66025403784438597e-01f;
loc_3.y = temp_5.y * -8.66025403784438597e-01f;
temp_0 = loc_0;
loc_0.x = loc_3.y;
loc_0.y = -loc_3.x;
temp_1.x = loc_1.x + loc_0.x;
temp_1.y = loc_1.y + loc_0.y;
loc_0.x = -loc_3.y;
loc_0.y = loc_3.x;
temp_5.x = loc_1.x + loc_0.x;
temp_5.y = loc_1.y + loc_0.y;
w.x = 7.66044443118978013e-01f;
w.y = 6.42787609686539252e-01f;
loc_1.x = temp_3.y * w.y;
loc_1.x = -loc_1.x;
loc_1.x = fma(temp_3.x, w.x, loc_1.x);
loc_1.y = temp_3.y * w.x;
loc_1.y = fma(temp_3.x, w.y, loc_1.y);
w.x = 1.73648177666930414e-01f;
w.y = 9.84807753012208020e-01f;
loc_3.x = temp_2.y * w.y;
loc_3.x = -loc_3.x;
loc_3.x = fma(temp_2.x, w.x, loc_3.x);
loc_3.y = temp_2.y * w.x;
loc_3.y = fma(temp_2.x, w.y, loc_3.y);
temp_3.x = loc_1.x + loc_3.x;
temp_3.y = loc_1.y + loc_3.y;
temp_2.x = loc_1.x - loc_3.x;
temp_2.y = loc_1.y - loc_3.y;
loc_0.x = temp_6.x + temp_3.x;
loc_0.y = temp_6.y + temp_3.y;
loc_1.x = fma(temp_3.x, -5.00000000000000000e-01f, temp_6.x);
loc_1.y = fma(temp_3.y, -5.00000000000000000e-01f, temp_6.y);
loc_3.x = temp_2.x * -8.66025403784438597e-01f;
loc_3.y = temp_2.y * -8.66025403784438597e-01f;
temp_6 = loc_0;
loc_0.x = loc_3.y;
loc_0.y = -loc_3.x;
temp_3.x = loc_1.x + loc_0.x;
temp_3.y = loc_1.y + loc_0.y;
loc_0.x = -loc_3.y;
loc_0.y = loc_3.x;
temp_2.x = loc_1.x + loc_0.x;
temp_2.y = loc_1.y + loc_0.y;
w.x = 1.73648177666930414e-01f;
w.y = 9.84807753012208020e-01f;
loc_1.x = temp_7.y * w.y;
loc_1.x = -loc_1.x;
loc_1.x = fma(temp_7.x, w.x, loc_1.x);
loc_1.y = temp_7.y * w.x;
loc_1.y = fma(temp_7.x, w.y, loc_1.y);
w.x = -9.39692620785908317e-01f;
w.y = 3.42020143325668879e-01f;
loc_3.x = temp_8.y * w.y;
loc_3.x = -loc_3.x;
loc_3.x = fma(temp_8.x, w.x, loc_3.x);
loc_3.y = temp_8.y * w.x;
loc_3.y = fma(temp_8.x, w.y, loc_3.y);
temp_7.x = loc_1.x + loc_3.x;
temp_7.y = loc_1.y + loc_3.y;
temp_8.x = loc_1.x - loc_3.x;
temp_8.y = loc_1.y - loc_3.y;
loc_0.x = temp_4.x + temp_7.x;
loc_0.y = temp_4.y + temp_7.y;
loc_1.x = fma(temp_7.x, -5.00000000000000000e-01f, temp_4.x);
loc_1.y = fma(temp_7.y, -5.00000000000000000e-01f, temp_4.y);
loc_3.x = temp_8.x * -8.66025403784438597e-01f;
loc_3.y = temp_8.y * -8.66025403784438597e-01f;
temp_4 = loc_0;
loc_0.x = loc_3.y;
loc_0.y = -loc_3.x;
temp_7.x = loc_1.x + loc_0.x;
temp_7.y = loc_1.y + loc_0.y;
loc_0.x = -loc_3.y;
loc_0.y = loc_3.x;
temp_8.x = loc_1.x + loc_0.x;
temp_8.y = loc_1.y + loc_0.y;
}
barrier();

if (gl_LocalInvocationID.x < 7) {
stageInvocationID = gl_LocalInvocationID.x + 0;
blockInvocationID = stageInvocationID;
stageInvocationID = stageInvocationID % 7;
blockInvocationID = blockInvocationID - stageInvocationID;
inoutID = blockInvocationID * 9;
inoutID = inoutID + stageInvocationID;
sdataID = inoutID + 0;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_0;
sdataID = inoutID + 7;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_6;
sdataID = inoutID + 14;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_4;
sdataID = inoutID + 21;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_1;
sdataID = inoutID + 28;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_3;
sdataID = inoutID + 35;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_7;
sdataID = inoutID + 42;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_5;
sdataID = inoutID + 49;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_2;
sdataID = inoutID + 56;
combinedID = gl_LocalInvocationID.y * 64;
sdataID = sdataID + combinedID;
sdata[sdataID] = temp_8;
}
barrier();

shiftZ = 0;
shiftZ = shiftZ + consts.outputOffset;
tempInt2 = 9 * gl_LocalInvocationID.y;
tempInt2 = tempInt2 + gl_LocalInvocationID.x;
tempInt2 = tempInt2 % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
tempInt2 = tempInt2 + tempInt;
if (tempInt2 < 63) {
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 0;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 288;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 576;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 864;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 1152;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 1440;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
combinedID = 9 * gl_LocalInvocationID.y;
combinedID = combinedID + gl_LocalInvocationID.x;
combinedID = combinedID + 1728;
inoutID_x = combinedID % 32;
tempInt = shiftX / 63;
tempInt = tempInt * 32;
inoutID_x = inoutID_x + tempInt;
tempInt2 = combinedID / 32;
tempInt2 = tempInt2 * 3969;
tempInt = shiftX % 63;
tempInt = tempInt * 63;
tempInt2 = tempInt2 + tempInt;
inoutID_x = inoutID_x + tempInt2;
inoutID = inoutID_x;
inoutID = inoutID + shiftZ;
sdataID = combinedID % 32;
sdataID = sdataID * 64;
tempInt = combinedID / 32;
sdataID = sdataID + tempInt;
outputs[inoutID] = sdata[sdataID];
}
}
